player <- input$select
try({rgl.close()})
x_nome <- jogo1ime[[paste0('E', player, 'x')]]
y_nome <- jogo1ime[[paste0('E', player, 'y')]]
jogador <- paste0('E', player, 'x') %>%
toString() %>%
str_replace('E','') %>%
str_replace('x', '') %>%
sprintf('Jogador %s', .)
x_c <- cut(x_nome, seq(0, 105, 3))
y_c <- cut(y_nome, seq(0, 68, 3))
z <- table(x_c, y_c)
hist3Drgl(z=z, border="black", main = jogador)
rglwidget(width = 1280, height = 720)
}, outputArgs =  list(width = "1280px", height = "720px"))
}
shinyApp(ui, server)
View(jogo1ime)
jogo1ime <- read.delim("~/Documentos/jogo1ime_completo.txt", header=TRUE)
library(magrittr)
setwd('~/Development/IME/cea2/rnn')
library(magrittr)
jogo1ime <- read.csv("~/Development/IME/cea2/rnn/jogo_simulado.txt", header=FALSE)
colnames(jogo1ime) <- c("EA1x","EA1y","EA2x","EA2y",
"EA3x","EA3y","EA4x","EA4y",
"EA5x","EA5y","EA6x","EA6y",
"EA7x","EA7y","EA8x","EA8y",
"EA9x","EA9y","EA10x","EA10y",
"EA11x","EA11y","EB18x","EB18y",
"EB19x","EB19y","EB20x","EB20y",
"EB21x","EB21y","EB22x","EB22y",
"EB23x","EB23y","EB24x","EB24y",
"EB25x","EB25y","EB26x","EB26y",
"EB27x","EB27y","EB28x","EB28y",
"bolax","bolay")
jogo1ime[,seq(1,46,2)] <- jogo1ime[,seq(1,46,2)]*105
jogo1ime[,seq(2,46,2)] <- jogo1ime[,seq(2,46,2)]*68
attach(jogo1ime)
indices_times <- c(rep('1',11), rep('2', 11))
legenda_jogador <- function(xs, ys){
for(jogador in 1:22){
legend(xs[jogador]-3.6, ys[jogador]+3.9, jogador,
bty = 'n')
}
}
library(png)
ima <- readPNG('../campo/background_campo.png')
library(foreach)
library(doParallel)
cl <- makeCluster(6)
registerDoParallel(cl)
ptime <- system.time({
foreach(tempo = 1:1001, .packages = c('magrittr')) %dopar% {
if(tempo%%1 == 0){
xs <- jogo1ime[tempo, seq(1, 44, 2)] %>% as.numeric() %>%
c(jogo1ime$bolax[tempo])
ys <- jogo1ime[tempo, seq(2, 44, 2)] %>% as.numeric() %>%
c(jogo1ime$bolay[tempo])
# if(jogo1ime[tempo,]$posse == 'EA'){
col = c(rep(c('red', 'black'), each=11), 'blue')
# } else{
#   col = c(rep(c('black', 'red'), each=11), 'blue')
# }
png(sprintf('./imagens/campo_%06d.png', tempo), width = 630, height = 408)
plot.new()
lim <- par()
rasterImage(ima, lim$usr[1], lim$usr[3], lim$usr[2], lim$usr[4])
par(new=TRUE)
plot(ys~xs,
xlim = c(0, 105), ylim = c(0, 68),
pch = c(rep(c(15, 17), each=11), 16),
col = col, main = sprintf('Tempo: %s segundos', round(tempo/30, 1)))
legenda_jogador(xs, ys)
dev.off()
}
}})
ptime
system('ffmpeg -framerate 6 -i ~/Development/IME/cea2/rnn/imagens/campo_%06d.png -c:v libx264 -profile:v high -crf 20 -pix_fmt yuv420p ~/Development/IME/cea2/rnn/simulação_deep5.mp4 -y')
tempo=1
plot(ys~xs,
xlim = c(0, 105), ylim = c(0, 68),
pch = c(rep(c(15, 17), each=11), 16),
col = col, main = sprintf('Tempo: %s segundos', round(tempo/30, 1)))
xs <- jogo1ime[tempo, seq(1, 44, 2)] %>% as.numeric() %>%
c(jogo1ime$bolax[tempo])
ys <- jogo1ime[tempo, seq(2, 44, 2)] %>% as.numeric() %>%
c(jogo1ime$bolay[tempo])
# if(jogo1ime[tempo,]$posse == 'EA'){
col = c(rep(c('red', 'black'), each=11), 'blue')
lim <- par()
rasterImage(ima, lim$usr[1], lim$usr[3], lim$usr[2], lim$usr[4])
par(new=TRUE)
plot(ys~xs,
xlim = c(0, 105), ylim = c(0, 68),
pch = c(rep(c(15, 17), each=11), 16),
col = col, main = sprintf('Tempo: %s segundos', round(tempo/30, 1)))
legenda_jogador(xs, ys)
rasterImage(ima, lim$usr[1], lim$usr[3], lim$usr[2], lim$usr[4])
tempo = 2
plot(ys~xs,
xlim = c(0, 105), ylim = c(0, 68),
pch = c(rep(c(15, 17), each=11), 16),
col = col, main = sprintf('Tempo: %s segundos', round(tempo/30, 1)))
legenda_jogador(xs, ys)
tempo = 1999
plot(ys~xs,
xlim = c(0, 105), ylim = c(0, 68),
pch = c(rep(c(15, 17), each=11), 16),
col = col, main = sprintf('Tempo: %s segundos', round(tempo/30, 1)))
legenda_jogador(xs, ys)
jogo1ime <- read.csv("~/Development/IME/cea2/jogo1ime_completo.txt", header=FALSE)
colnames(jogo1ime)
jogo1ime_completo <- read.delim("~/Development/IME/cea2/jogo1ime_completo.txt")
View(jogo1ime_completo)
colnames(jogo1ime)
colnames(jogo1ime_completo)
base_nova <- data.frame()
attach(jogo1ime_completo)
base_nova$ataque <- ataque
base_nova <- data.frame(ataque)
base_nova %>% View
base_nova <- data.frame(posse)
base_nova %>% View
base_nova <- data.frame(as.factor(posse))
colnames(jogo1ime_completo)
jogo1ime_completo %>% View
base_nova <- cbind(base_nova, jogo1ime_completo[,9:])
base_nova <- cbind(base_nova, jogo1ime_completo[,9:80])
i=9
jogador_x <- jogo1ime_completo[,i]
jogador_y <- jogo1ime_completo[,i+1]
dist_jogador_bola <- (bolay-jogador_y)^2 + (bolax-jogador_x)^2 %>% sqrt()
dist_jogador_bola
max(dist_jogador_bola)
min(dist_jogador_bola)
attach(jogo1ime_completo)
base_nova <- data.frame(as.factor(posse))
base_nova <- cbind(base_nova, jogo1ime_completo[,9:80])
library(stringr)
base_nova <- data.frame(as.factor(posse))
base_nova <- cbind(base_nova, jogo1ime_completo[,9:80])
for(i in seq(9, 52, 2)){
jogador_x <- jogo1ime_completo[,i]
jogador_y <- jogo1ime_completo[,i+1]
dist_jogador_bola <- (bolay-jogador_y)^2 + (bolax-jogador_x)^2 %>% sqrt()
base_nova <- cbind(base_nova, dist_jogador_bola)
colnames(base_nova) <- c(colnames(base_nova),
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', '')))
}
i = 9
jogador_x <- jogo1ime_completo[,i]
jogador_y <- jogo1ime_completo[,i+1]
dist_jogador_bola <- (bolay-jogador_y)^2 + (bolax-jogador_x)^2 %>% sqrt()
base_nova <- cbind(base_nova, dist_jogador_bola)
colnames(base_nova) <- c(colnames(base_nova),
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', '')))
colnames(base_nova) <- c(colnames(base_nova),
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', '')))
colnames(base_nova)
base_nova <- data.frame(as.factor(posse))
base_nova <- cbind(base_nova, jogo1ime_completo[,9:80])
colnames(base_nova)
sprintf('%s_bola',colnames(jogo1ime_completo)[i]
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', ''))
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', ''))
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', ''))
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', ''))
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', ''))
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', ''))
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', ''))
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', ''))
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', ''))
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', ''))
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', ''))
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', ''))
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', ''))
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', ''))
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', ''))
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', ''))
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', ''))
colnames(base_nova)
colnames(base_nova)[1:-1]
colnames(base_nova)[0:-1]
colnames(base_nova)[-1]
colnames(base_nova)[-3]
length(base_nova)
base_nova <- data.frame(as.factor(posse))
base_nova <- cbind(base_nova, jogo1ime_completo[,9:80])
for(i in seq(9, 52, 2)){
jogador_x <- jogo1ime_completo[,i]
jogador_y <- jogo1ime_completo[,i+1]
dist_jogador_bola <- (bolay-jogador_y)^2 + (bolax-jogador_x)^2 %>% sqrt()
base_nova <- cbind(base_nova, dist_jogador_bola)
colnames(base_nova) <- c(colnames(base_nova)[1:length(base_nova)-1],
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', '')))
}
base_nova %>% colnames()
colnames(base_nova) <- c('posse', colnames(base_nova[2:length(base_nova)]))
base_nova %>% View
base_nova <- base_nova[, 2:length(base_nova)]
setwd('~/Development/IME/cea2')
write.csv(base_nova, 'base_nova.txt')
colnames(base_nova)
#jogo1ime <- read.delim("~/Documentos/jogo1ime_completo.txt", header=TRUE)
jogo1ime <- read.csv('base_nova.txt', header = TRUE)
attach(jogo1ime)
data_diminuida <- jogo1ime[seq(1, nrow(jogo1ime)-1, 5),]
data_diminuida[is.na(data_diminuida)] <- 0
write.csv(data_diminuida, 'data_dim_nova.csv')
setwd('~/Development/IME/cea2/rnn')
library(magrittr)
jogo1ime <- read.csv("~/Development/IME/cea2/rnn/jogo_simulado.txt", header=FALSE)
colnames(jogo1ime) <- c("EA1x","EA1y","EA2x","EA2y",
"EA3x","EA3y","EA4x","EA4y",
"EA5x","EA5y","EA6x","EA6y",
"EA7x","EA7y","EA8x","EA8y",
"EA9x","EA9y","EA10x","EA10y",
"EA11x","EA11y","EB18x","EB18y",
"EB19x","EB19y","EB20x","EB20y",
"EB21x","EB21y","EB22x","EB22y",
"EB23x","EB23y","EB24x","EB24y",
"EB25x","EB25y","EB26x","EB26y",
"EB27x","EB27y","EB28x","EB28y",
"bolax","bolay")
jogo1ime[,seq(1,46,2)] <- jogo1ime[,seq(1,46,2)]*105
jogo1ime[,seq(2,46,2)] <- jogo1ime[,seq(2,46,2)]*68
attach(jogo1ime)
indices_times <- c(rep('1',11), rep('2', 11))
legenda_jogador <- function(xs, ys){
for(jogador in 1:22){
legend(xs[jogador]-3.6, ys[jogador]+3.9, jogador,
bty = 'n')
}
}
library(png)
ima <- readPNG('../campo/background_campo.png')
library(foreach)
library(doParallel)
cl <- makeCluster(6)
registerDoParallel(cl)
ptime <- system.time({
foreach(tempo = 1:1001, .packages = c('magrittr')) %dopar% {
if(tempo%%1 == 0){
xs <- jogo1ime[tempo, seq(1, 44, 2)] %>% as.numeric() %>%
c(jogo1ime$bolax[tempo])
ys <- jogo1ime[tempo, seq(2, 44, 2)] %>% as.numeric() %>%
c(jogo1ime$bolay[tempo])
# if(jogo1ime[tempo,]$posse == 'EA'){
col = c(rep(c('red', 'black'), each=11), 'blue')
# } else{
#   col = c(rep(c('black', 'red'), each=11), 'blue')
# }
png(sprintf('./imagens/campo_%06d.png', tempo), width = 630, height = 408)
plot.new()
lim <- par()
rasterImage(ima, lim$usr[1], lim$usr[3], lim$usr[2], lim$usr[4])
par(new=TRUE)
plot(ys~xs,
xlim = c(0, 105), ylim = c(0, 68),
pch = c(rep(c(15, 17), each=11), 16),
col = col, main = sprintf('Tempo: %s segundos', round(tempo/30, 1)))
legenda_jogador(xs, ys)
dev.off()
}
}})
ptime
system('ffmpeg -framerate 6 -i ~/Development/IME/cea2/rnn/imagens/campo_%06d.png -c:v libx264 -profile:v high -crf 20 -pix_fmt yuv420p ~/Development/IME/cea2/rnn/simulação_deep5.mp4 -y')
setwd('~/Development/IME/cea2/rnn')
library(magrittr)
jogo1ime <- read.csv("~/Development/IME/cea2/rnn/jogo_simulado.txt", header=FALSE)
colnames(jogo1ime) <- c("EA1x","EA1y","EA2x","EA2y",
"EA3x","EA3y","EA4x","EA4y",
"EA5x","EA5y","EA6x","EA6y",
"EA7x","EA7y","EA8x","EA8y",
"EA9x","EA9y","EA10x","EA10y",
"EA11x","EA11y","EB18x","EB18y",
"EB19x","EB19y","EB20x","EB20y",
"EB21x","EB21y","EB22x","EB22y",
"EB23x","EB23y","EB24x","EB24y",
"EB25x","EB25y","EB26x","EB26y",
"EB27x","EB27y","EB28x","EB28y",
"bolax","bolay")
jogo1ime[,seq(1,95,2)] <- jogo1ime[,seq(1,95,2)]*105
jogo1ime[,seq(2,95,2)] <- jogo1ime[,seq(2,95,2)]*68
attach(jogo1ime)
indices_times <- c(rep('1',11), rep('2', 11))
legenda_jogador <- function(xs, ys){
for(jogador in 1:22){
legend(xs[jogador]-3.6, ys[jogador]+3.9, jogador,
bty = 'n')
}
}
library(png)
ima <- readPNG('../campo/background_campo.png')
library(foreach)
library(doParallel)
cl <- makeCluster(6)
registerDoParallel(cl)
ptime <- system.time({
foreach(tempo = 1:1001, .packages = c('magrittr')) %dopar% {
if(tempo%%1 == 0){
xs <- jogo1ime[tempo, seq(1, 44, 2)] %>% as.numeric() %>%
c(jogo1ime$bolax[tempo])
ys <- jogo1ime[tempo, seq(2, 44, 2)] %>% as.numeric() %>%
c(jogo1ime$bolay[tempo])
# if(jogo1ime[tempo,]$posse == 'EA'){
col = c(rep(c('red', 'black'), each=11), 'blue')
# } else{
#   col = c(rep(c('black', 'red'), each=11), 'blue')
# }
png(sprintf('./imagens/campo_%06d.png', tempo), width = 630, height = 408)
plot.new()
lim <- par()
rasterImage(ima, lim$usr[1], lim$usr[3], lim$usr[2], lim$usr[4])
par(new=TRUE)
plot(ys~xs,
xlim = c(0, 105), ylim = c(0, 68),
pch = c(rep(c(15, 17), each=11), 16),
col = col, main = sprintf('Tempo: %s segundos', round(tempo/30, 1)))
legenda_jogador(xs, ys)
dev.off()
}
}})
ptime
system('ffmpeg -framerate 6 -i ~/Development/IME/cea2/rnn/imagens/campo_%06d.png -c:v libx264 -profile:v high -crf 20 -pix_fmt yuv420p ~/Development/IME/cea2/rnn/simulação_deep5.mp4 -y')
setwd('~/Development/IME/cea2/rnn')
library(magrittr)
jogo1ime <- read.csv("~/Development/IME/cea2/rnn/jogo_simulado.txt", header=FALSE)
colnames(jogo1ime) <- c("EA1x","EA1y","EA2x","EA2y",
"EA3x","EA3y","EA4x","EA4y",
"EA5x","EA5y","EA6x","EA6y",
"EA7x","EA7y","EA8x","EA8y",
"EA9x","EA9y","EA10x","EA10y",
"EA11x","EA11y","EB18x","EB18y",
"EB19x","EB19y","EB20x","EB20y",
"EB21x","EB21y","EB22x","EB22y",
"EB23x","EB23y","EB24x","EB24y",
"EB25x","EB25y","EB26x","EB26y",
"EB27x","EB27y","EB28x","EB28y",
"bolax","bolay")
jogo1ime[,seq(1,95,2)] <- jogo1ime[,seq(1,95,2)]*105
jogo1ime[,seq(2,95,2)] <- jogo1ime[,seq(2,95,2)]*68
attach(jogo1ime)
indices_times <- c(rep('1',11), rep('2', 11))
legenda_jogador <- function(xs, ys){
for(jogador in 1:22){
legend(xs[jogador]-3.6, ys[jogador]+3.9, jogador,
bty = 'n')
}
}
library(png)
ima <- readPNG('../campo/background_campo.png')
library(foreach)
library(doParallel)
cl <- makeCluster(6)
registerDoParallel(cl)
ptime <- system.time({
foreach(tempo = 1:1001, .packages = c('magrittr')) %dopar% {
if(tempo%%1 == 0){
xs <- jogo1ime[tempo, seq(1, 44, 2)] %>% as.numeric() %>%
c(jogo1ime$bolax[tempo])
ys <- jogo1ime[tempo, seq(2, 44, 2)] %>% as.numeric() %>%
c(jogo1ime$bolay[tempo])
# if(jogo1ime[tempo,]$posse == 'EA'){
col = c(rep(c('red', 'black'), each=11), 'blue')
# } else{
#   col = c(rep(c('black', 'red'), each=11), 'blue')
# }
png(sprintf('./imagens/campo_%06d.png', tempo), width = 630, height = 408)
plot.new()
lim <- par()
rasterImage(ima, lim$usr[1], lim$usr[3], lim$usr[2], lim$usr[4])
par(new=TRUE)
plot(ys~xs,
xlim = c(0, 105), ylim = c(0, 68),
pch = c(rep(c(15, 17), each=11), 16),
col = col, main = sprintf('Tempo: %s segundos', round(tempo/30, 1)))
legenda_jogador(xs, ys)
dev.off()
}
}})
ptime
system('ffmpeg -framerate 6 -i ~/Development/IME/cea2/rnn/imagens/campo_%06d.png -c:v libx264 -profile:v high -crf 20 -pix_fmt yuv420p ~/Development/IME/cea2/rnn/simulação_deep5.mp4 -y')
setwd('~/Development/IME/cea2')
library(magrittr)
library(stringr)
jogo1ime_completo <- read.delim("~/Development/IME/cea2/jogo1ime_completo.txt")
attach(jogo1ime_completo)
base_nova <- data.frame(as.factor(posse))
base_nova <- cbind(base_nova, jogo1ime_completo[,9:80])
for(i in seq(9, 52, 2)){
jogador_x <- jogo1ime_completo[,i]
jogador_y <- jogo1ime_completo[,i+1]
dist_jogador_bola <- (bolay-jogador_y)^2 + (bolax-jogador_x)^2 %>% sqrt()
base_nova <- cbind(base_nova, dist_jogador_bola)
colnames(base_nova) <- c(colnames(base_nova)[1:length(base_nova)-1],
sprintf('%s_bola',colnames(jogo1ime_completo)[i] %>%
str_replace('x', '')))
}
colnames(base_nova) <- c('posse', colnames(base_nova[2:length(base_nova)]))
#base_nova <- base_nova[, 2:length(base_nova)]
write.csv(base_nova, 'base_nova.txt')
setwd('~/Development/IME/cea2/')
library(magrittr)
#jogo1ime <- read.delim("~/Documentos/jogo1ime_completo.txt", header=TRUE)
jogo1ime <- read.csv('base_nova.txt', header = TRUE)
setwd('~/Development/IME/cea2/')
library(magrittr)
#jogo1ime <- read.delim("~/Documentos/jogo1ime_completo.txt", header=TRUE)
jogo1ime <- read.csv('base_nova.txt', header = TRUE)
attach(jogo1ime)
data_diminuida <- jogo1ime[seq(1, nrow(jogo1ime)-1, 2),]
data_diminuida[is.na(data_diminuida)] <- 0
write.csv(data_diminuida, 'data_dim_nova.csv')
data_diminuida %>% View
setwd('~/Development/IME/cea2/')
library(magrittr)
#jogo1ime <- read.delim("~/Documentos/jogo1ime_completo.txt", header=TRUE)
jogo1ime <- read.csv('base_nova.txt', header = TRUE)
attach(jogo1ime)
data_diminuida <- jogo1ime[seq(2, nrow(jogo1ime)-1, 2),]
data_diminuida[is.na(data_diminuida)] <- 0
write.csv(data_diminuida, 'data_dim_nova.csv')
setwd('~/Development/IME/cea2/')
library(magrittr)
#jogo1ime <- read.delim("~/Documentos/jogo1ime_completo.txt", header=TRUE)
jogo1ime <- read.csv('base_nova.txt', header = TRUE)
attach(jogo1ime)
data_diminuida <- jogo1ime[seq(1, nrow(jogo1ime)-1, 2), 2:length(jogo1ime)]
data_diminuida[is.na(data_diminuida)] <- 0
write.csv(data_diminuida, 'data_dim_nova.csv')
data_diminuida %>% View
data_diminuida %>% colnames()
setwd('~/Development/IME/cea2/rnn')
library(magrittr)
jogo1ime <- read.csv("~/Development/IME/cea2/rnn/jogo_simulado.txt", header=FALSE)
colnames(jogo1ime) <- c("EA1x","EA1y","EA2x","EA2y",
"EA3x","EA3y","EA4x","EA4y",
"EA5x","EA5y","EA6x","EA6y",
"EA7x","EA7y","EA8x","EA8y",
"EA9x","EA9y","EA10x","EA10y",
"EA11x","EA11y","EB18x","EB18y",
"EB19x","EB19y","EB20x","EB20y",
"EB21x","EB21y","EB22x","EB22y",
"EB23x","EB23y","EB24x","EB24y",
"EB25x","EB25y","EB26x","EB26y",
"EB27x","EB27y","EB28x","EB28y",
"bolax","bolay")
jogo1ime[,seq(1,95,2)] <- jogo1ime[,seq(1,95,2)]*105
jogo1ime[,seq(2,95,2)] <- jogo1ime[,seq(2,95,2)]*68
attach(jogo1ime)
indices_times <- c(rep('1',11), rep('2', 11))
legenda_jogador <- function(xs, ys){
for(jogador in 1:22){
legend(xs[jogador]-3.6, ys[jogador]+3.9, jogador,
bty = 'n')
}
}
library(png)
ima <- readPNG('../campo/background_campo.png')
library(foreach)
library(doParallel)
cl <- makeCluster(6)
registerDoParallel(cl)
ptime <- system.time({
foreach(tempo = 1:1001, .packages = c('magrittr')) %dopar% {
if(tempo%%1 == 0){
xs <- jogo1ime[tempo, seq(1, 44, 2)] %>% as.numeric() %>%
c(jogo1ime$bolax[tempo])
ys <- jogo1ime[tempo, seq(2, 44, 2)] %>% as.numeric() %>%
c(jogo1ime$bolay[tempo])
# if(jogo1ime[tempo,]$posse == 'EA'){
col = c(rep(c('red', 'black'), each=11), 'blue')
# } else{
#   col = c(rep(c('black', 'red'), each=11), 'blue')
# }
png(sprintf('./imagens/campo_%06d.png', tempo), width = 630, height = 408)
plot.new()
lim <- par()
rasterImage(ima, lim$usr[1], lim$usr[3], lim$usr[2], lim$usr[4])
par(new=TRUE)
plot(ys~xs,
xlim = c(0, 105), ylim = c(0, 68),
pch = c(rep(c(15, 17), each=11), 16),
col = col, main = sprintf('Tempo: %s segundos', round(tempo/30, 1)))
legenda_jogador(xs, ys)
dev.off()
}
}})
ptime
system('ffmpeg -framerate 15 -i ~/Development/IME/cea2/rnn/imagens/campo_%06d.png -c:v libx264 -profile:v high -crf 20 -pix_fmt yuv420p ~/Development/IME/cea2/rnn/simulação_deep5.mp4 -y')
